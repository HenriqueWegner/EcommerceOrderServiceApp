spring:
  application:
    name: EcommerceOrderServiceApi
  output:
    ansi:
      enabled: ALWAYS
  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5435/ecommerce}
    username: ${DATSOURCE_USERNAME:postgres}
    password: ${DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    show_sql: true
    properties:
      hibernate:
        format_sql: true
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.value.default.type: io.github.henriquewegner.EcommerceOrderServiceApi.domain.event.PaymentEvent
        spring.json.trusted.packages: "*"
    topic:
      order-event: order-events
      payment-event: payment-events
      payment-update: payment-updates
      payment-update-dlq: payment-updates-dlq
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}

security:
  roles:
    admin-access: ADMIN
    user-access: USER
    all-access: ADMIN,USER


api:
  url:
    via-cep: "https://viacep.com.br/ws/%s/json/"
    shipping-quotation: "https://showcommerce.com.br/api/calculadora-frete/"

logging:
  level:
    org.springframework.security: DEBUG