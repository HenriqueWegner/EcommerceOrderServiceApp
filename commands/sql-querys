create table customers (
    id uuid primary key,
    name varchar(255),
    email varchar(255),
    address varchar(255),
    phone_number varchar(50)
);

create table orders (
    id uuid primary key,
    created_at timestamp default now(),
    updated_at timestamp default now(),
    currency varchar(10),
    status varchar(50),
    customer_id uuid not null,
    cep varchar(20),
    street varchar(255),
    neighborhood varchar(255),
    city varchar(255),
    state varchar(100),
    uf varchar(2),
    number varchar(20),
    complement varchar(255)
);

CREATE TABLE order_items (

    id UUID NOT NULL PRIMARY KEY,
    order_id UUID NOT NULL,
    sku VARCHAR(100) NOT NULL,
    quantity NUMERIC(4) NOT NULL,
    unit_price NUMERIC(18,2) NOT NULL,
    CONSTRAINT fk_orderitems_order FOREIGN KEY (order_id) REFERENCES orders(id)
);

create table payments (
    id uuid not null primary key,
    order_id uuid not null,
    card_token varchar(50) not null,
    payment_method varchar(50) not null,
    payment_status varchar(50) not null,
    amount numeric(18,2),
    constraint fk_payment_order foreign key (order_id) references orders(id)
);

create table shippings (
    id uuid not null primary key,
    price numeric(10,2) not null,
    estimated_delivery date not null,
    carrier varchar(50) not null,
    cep_origin varchar(9) not null,
    cep_destination varchar(9) not null,
    order_id uuid not null unique,
    constraint fk_shipping_order foreign key (order_id) references orders(id)
);

create table orders_idempotency (
    customer_id uuid not null,
    idempotency_key varchar(100) not null,
    request_hash varchar(64) not null,
    response jsonb not null,
    created_at timestamptz default now(),
    primary key(customer_id, idempotency_key)
);

CREATE TABLE outbox_events (
    id BIGSERIAL PRIMARY KEY,
    aggregate_id VARCHAR(255) NOT NULL,
    event_type VARCHAR(50) NOT NULL,
    payload JSONB,
    processed BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP WITHOUT TIME ZONE
);


CREATE TABLE products (
    sku VARCHAR(100) PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(255),
    unit_price NUMERIC(18,2) NOT NULL,
    stock INT NOT NULL DEFAULT 0,
    reserved INT NOT NULL DEFAULT 0
);